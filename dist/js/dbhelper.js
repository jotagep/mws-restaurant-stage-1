class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){fetch(DBHelper.DATABASE_URL).then(e=>{e.json().then(e=>t(null,e)).catch(e=>t(e,null))}).catch(t=>{console.error(t)})}static fetchRestaurantById(t,e){fetch(`${DBHelper.DATABASE_URL}/${t}`).then(t=>{t.json().then(t=>e(null,t)).catch(t=>e("Restaurant does not exist",null))}).catch(t=>{console.error(t)})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((s,a)=>{if(s)e(s,null);else{const s=a.filter(e=>e.cuisine_type==t);e(null,s)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((s,a)=>{if(s)e(s,null);else{const s=a.filter(e=>e.neighborhood==t);e(null,s)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,s){DBHelper.fetchRestaurants((a,n)=>{if(a)s(a,null);else{let a=n;"all"!=t&&(a=a.filter(e=>e.cuisine_type==t)),"all"!=e&&(a=a.filter(t=>t.neighborhood==e)),s(null,a)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,s)=>{if(e)t(e,null);else{const e=s.map((t,e)=>s[e].neighborhood),a=e.filter((t,s)=>e.indexOf(t)==s);t(null,a)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,s)=>{if(e)t(e,null);else{const e=s.map((t,e)=>s[e].cuisine_type),a=e.filter((t,s)=>e.indexOf(t)==s);t(null,a)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`./assets/img/${t.photograph}`}static imageRespForRestaurant(t,e="original",s="jpg"){return"small"==e||"medium"==e?`./assets/img/${t.id}-${e}.${s} 1x,\n        ./assets/img/${t.id}-${e}@2x.${s} 2x`:`./assets/img/${t.id}-${e}.${s} 1x`}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
