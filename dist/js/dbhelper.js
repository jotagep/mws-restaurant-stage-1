var dbPromise;class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){fetch(DBHelper.DATABASE_URL).then(e=>{e.json().then(e=>(dbPromise.then(t=>{if(!t)return;const r=t.transaction("restaurants","readwrite").objectStore("restaurants");e.forEach(t=>{r.put(t)}),console.log("Added to IDB")}),t(null,e))).catch(e=>t(e,null))}).catch(e=>{dbPromise.then(e=>{if(!e)return;e.transaction("restaurants").objectStore("restaurants").getAll().then(function(e){return console.log("** From IDB **"),t(null,e)})}),console.error(e)})}static fetchRestaurantById(t,e){fetch(`${DBHelper.DATABASE_URL}/${t}`).then(t=>{t.json().then(t=>e(null,t)).catch(t=>e("Restaurant does not exist",null))}).catch(r=>{dbPromise.then(r=>{if(!r)return;r.transaction("restaurants").objectStore("restaurants").get(parseInt(t)).then(function(t){return console.log("** From IDB - ID **"),e(null,t)})}),console.error(r)})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((r,n)=>{if(r)e(r,null);else{const r=n.filter(e=>e.cuisine_type==t);e(null,r)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((r,n)=>{if(r)e(r,null);else{const r=n.filter(e=>e.neighborhood==t);e(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,r){DBHelper.fetchRestaurants((n,s)=>{if(n)r(n,null);else{let n=s;"all"!=t&&(n=n.filter(e=>e.cuisine_type==t)),"all"!=e&&(n=n.filter(t=>t.neighborhood==e)),r(null,n)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].neighborhood),n=e.filter((t,r)=>e.indexOf(t)==r);t(null,n)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].cuisine_type),n=e.filter((t,r)=>e.indexOf(t)==r);t(null,n)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`./assets/img/${t.photograph}`}static imageRespForRestaurant(t,e="original",r="jpg"){return"small"==e||"medium"==e?`./assets/img/${t.id}-${e}.${r} 1x,\n        ./assets/img/${t.id}-${e}@2x.${r} 2x`:`./assets/img/${t.id}-${e}.${r} 1x`}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}static openDB(){navigator.serviceWorker&&(console.log(" == IDB Created =="),dbPromise=idb.open("mws",1,function(t){t.createObjectStore("restaurants",{keyPath:"id"})}))}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
