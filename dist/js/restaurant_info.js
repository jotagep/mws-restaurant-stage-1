let restaurant;var map;window.initMap=(()=>{DBHelper.openDB(),fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-photo"),n=document.createElement("source");n.type="image/webp",n.srcset=DBHelper.imageRespForRestaurant(e,"original","webp"),n.media="(min-width: 661px) and (max-width: 860px),\n                          (min-width: 1501)",t.append(n);const a=document.createElement("source");a.type="image/webp",a.srcset=DBHelper.imageRespForRestaurant(e,"large","webp"),a.media="(min-width: 461px) and (max-width: 660px), \n                      (min-width: 1061px) and (max-width: 1500px)",t.append(a);const r=document.createElement("source");r.type="image/webp",r.srcset=DBHelper.imageRespForRestaurant(e,"medium","webp"),r.media="(min-width: 361px) and (max-width: 460px),\n                        (min-width: 861px) and (max-width: 1060px)",t.append(r);const m=document.createElement("source");m.type="image/webp",m.srcset=DBHelper.imageRespForRestaurant(e,"small","webp"),m.media="(max-width: 360px)",t.append(m);const i=document.createElement("source");i.type="image/jpeg",i.srcset=DBHelper.imageRespForRestaurant(e,"original"),i.media="(min-width: 661px) and (max-width: 860px),\n                        (min-width: 1501)",t.append(i);const d=document.createElement("source");d.type="image/jpeg",d.srcset=DBHelper.imageRespForRestaurant(e,"large"),d.media="(min-width: 461px) and (max-width: 660px), \n                      (min-width: 1061px) and (max-width: 1500px)",t.append(d);const s=document.createElement("source");s.type="image/jpeg",s.srcset=DBHelper.imageRespForRestaurant(e,"medium"),s.media="(min-width: 361px) and (max-width: 460px),\n                      (min-width: 861px) and (max-width: 1060px)",t.append(s);const p=document.createElement("img");p.type="image/jpeg",p.srcset=DBHelper.imageRespForRestaurant(e,"small"),p.media="(max-width: 360px)",p.alt=`${e.name} - ${e.photo_description}`,t.append(p),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,r.className="day",a.appendChild(r);const m=document.createElement("td");m.innerHTML=e[n],m.className="time",a.appendChild(m),t.appendChild(a)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const a=document.getElementById("reviews-list");e.forEach(e=>{a.appendChild(createReviewHTML(e))}),t.appendChild(a)}),createReviewHTML=(e=>{const t=document.createElement("li");t.className="review__card";const n=document.createElement("div");n.className="review__header";const a=document.createElement("h4");a.innerHTML=e.name,a.className="review__name",n.appendChild(a);const r=document.createElement("span");r.innerHTML=e.date,r.className="review__date",n.appendChild(r),t.appendChild(n);const m=document.createElement("div");m.className="review__body";const i=document.createElement("span");i.innerHTML=`Rating: ${e.rating}`,i.className="review__rating";const d=document.createElement("i");d.className="fas fa-star",i.appendChild(d),m.appendChild(i);const s=document.createElement("p");return s.innerHTML=e.comments,s.className="review__comments",m.appendChild(s),t.appendChild(m),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RhdXJhbnRfaW5mby5qcyJdLCJuYW1lcyI6WyJyZXN0YXVyYW50IiwibWFwIiwid2luZG93IiwiaW5pdE1hcCIsIkRCSGVscGVyIiwib3BlbkRCIiwiZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCIsImVycm9yIiwiY29uc29sZSIsInNlbGYiLCJnb29nbGUiLCJtYXBzIiwiTWFwIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInpvb20iLCJjZW50ZXIiLCJsYXRsbmciLCJzY3JvbGx3aGVlbCIsImZpbGxCcmVhZGNydW1iIiwibWFwTWFya2VyRm9yUmVzdGF1cmFudCIsImNhbGxiYWNrIiwiaWQiLCJnZXRQYXJhbWV0ZXJCeU5hbWUiLCJmZXRjaFJlc3RhdXJhbnRCeUlkIiwiZmlsbFJlc3RhdXJhbnRIVE1MIiwiaW5uZXJIVE1MIiwibmFtZSIsImFkZHJlc3MiLCJwaWN0dXJlIiwiV2VicF9vcmlnaW5hbCIsImNyZWF0ZUVsZW1lbnQiLCJ0eXBlIiwic3Jjc2V0IiwiaW1hZ2VSZXNwRm9yUmVzdGF1cmFudCIsIm1lZGlhIiwiYXBwZW5kIiwiV2VicF9sYXJnZSIsIldlYlBfbWVkaXVtIiwiV2ViUF9zbWFsbCIsIkpwZ19vcmlnaW5hbCIsIkpwZ19sYXJnZSIsIkpwZ19tZWRpdW0iLCJpbWFnZV9zbWFsbCIsImFsdCIsInBob3RvX2Rlc2NyaXB0aW9uIiwiY3Vpc2luZV90eXBlIiwib3BlcmF0aW5nX2hvdXJzIiwiZmlsbFJlc3RhdXJhbnRIb3Vyc0hUTUwiLCJmaWxsUmV2aWV3c0hUTUwiLCJvcGVyYXRpbmdIb3VycyIsImhvdXJzIiwia2V5Iiwicm93IiwiZGF5IiwiY2xhc3NOYW1lIiwiYXBwZW5kQ2hpbGQiLCJ0aW1lIiwicmV2aWV3cyIsImNvbnRhaW5lciIsInRpdGxlIiwibm9SZXZpZXdzIiwidWwiLCJmb3JFYWNoIiwicmV2aWV3IiwiY3JlYXRlUmV2aWV3SFRNTCIsImxpIiwiaGVhZGVyIiwiZGF0ZSIsImJvZHkiLCJyYXRpbmciLCJpY29uIiwiY29tbWVudHMiLCJicmVhZGNydW1iIiwidXJsIiwibG9jYXRpb24iLCJocmVmIiwicmVwbGFjZSIsInJlc3VsdHMiLCJSZWdFeHAiLCJleGVjIiwiZGVjb2RlVVJJQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUNKLElBQUlDLElBS0pDLE9BQU9DLFFBQVUsTUFDYkMsU0FBU0MsU0FDVEMsdUJBQXVCLENBQUNDLEVBQU9QLEtBQ3ZCTyxFQUNBQyxRQUFRRCxNQUFNQSxJQUVkRSxLQUFLUixJQUFNLElBQUlTLE9BQU9DLEtBQUtDLElBQUlDLFNBQVNDLGVBQWUsUUFDbkRDLEtBQU0sR0FDTkMsT0FBUWhCLEVBQVdpQixPQUNuQkMsYUFBYSxJQUVqQkMsaUJBQ0FmLFNBQVNnQix1QkFBdUJYLEtBQUtULFdBQVlTLEtBQUtSLFVBUWxFSyx1QkFBeUIsQ0FBQ2UsSUFDdEIsR0FBSVosS0FBS1QsV0FFTCxZQURBcUIsRUFBUyxLQUFNWixLQUFLVCxZQUd4QixNQUFNc0IsRUFBS0MsbUJBQW1CLE1BQ3pCRCxFQUlEbEIsU0FBU29CLG9CQUFvQkYsRUFBSSxDQUFDZixFQUFPUCxLQUNyQ1MsS0FBS1QsV0FBYUEsRUFDYkEsR0FJTHlCLHFCQUNBSixFQUFTLEtBQU1yQixJQUpYUSxRQUFRRCxNQUFNQSxNQU50QkEsTUFBUSwwQkFDUmMsRUFBU2QsTUFBTyxTQWlCeEJrQixtQkFBcUIsRUFBQ3pCLEVBQWFTLEtBQUtULGNBQ3ZCYSxTQUFTQyxlQUFlLG1CQUNoQ1ksVUFBWTFCLEVBQVcyQixLQUVaZCxTQUFTQyxlQUFlLHNCQUNoQ1ksVUFBWTFCLEVBQVc0QixRQUUvQixNQUFNQyxFQUFVaEIsU0FBU0MsZUFBZSxvQkFHbENnQixFQUFnQmpCLFNBQVNrQixjQUFjLFVBQzdDRCxFQUFjRSxLQUFPLGFBQ3JCRixFQUFjRyxPQUFTN0IsU0FBUzhCLHVCQUF1QmxDLEVBQVksV0FBWSxRQUMvRThCLEVBQWNLLE1BQVEsMEZBRXRCTixFQUFRTyxPQUFPTixHQUVmLE1BQU1PLEVBQWF4QixT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InJlc3RhdXJhbnRfaW5mby5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCByZXN0YXVyYW50O1xudmFyIG1hcDtcblxuLyoqXG4gKiBJbml0aWFsaXplIEdvb2dsZSBtYXAsIGNhbGxlZCBmcm9tIEhUTUwuXG4gKi9cbndpbmRvdy5pbml0TWFwID0gKCkgPT4ge1xuICAgIERCSGVscGVyLm9wZW5EQigpO1xuICAgIGZldGNoUmVzdGF1cmFudEZyb21VUkwoKGVycm9yLCByZXN0YXVyYW50KSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikgeyAvLyBHb3QgYW4gZXJyb3IhXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYubWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHtcbiAgICAgICAgICAgICAgICB6b29tOiAxNixcbiAgICAgICAgICAgICAgICBjZW50ZXI6IHJlc3RhdXJhbnQubGF0bG5nLFxuICAgICAgICAgICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBmaWxsQnJlYWRjcnVtYigpO1xuICAgICAgICAgICAgREJIZWxwZXIubWFwTWFya2VyRm9yUmVzdGF1cmFudChzZWxmLnJlc3RhdXJhbnQsIHNlbGYubWFwKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG4vKipcbiAqIEdldCBjdXJyZW50IHJlc3RhdXJhbnQgZnJvbSBwYWdlIFVSTC5cbiAqL1xuZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCA9IChjYWxsYmFjaykgPT4ge1xuICAgIGlmIChzZWxmLnJlc3RhdXJhbnQpIHsgLy8gcmVzdGF1cmFudCBhbHJlYWR5IGZldGNoZWQhXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHNlbGYucmVzdGF1cmFudClcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpZCA9IGdldFBhcmFtZXRlckJ5TmFtZSgnaWQnKTtcbiAgICBpZiAoIWlkKSB7IC8vIG5vIGlkIGZvdW5kIGluIFVSTFxuICAgICAgICBlcnJvciA9ICdObyByZXN0YXVyYW50IGlkIGluIFVSTCdcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIERCSGVscGVyLmZldGNoUmVzdGF1cmFudEJ5SWQoaWQsIChlcnJvciwgcmVzdGF1cmFudCkgPT4ge1xuICAgICAgICAgICAgc2VsZi5yZXN0YXVyYW50ID0gcmVzdGF1cmFudDtcbiAgICAgICAgICAgIGlmICghcmVzdGF1cmFudCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbGxSZXN0YXVyYW50SFRNTCgpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdGF1cmFudClcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSByZXN0YXVyYW50IEhUTUwgYW5kIGFkZCBpdCB0byB0aGUgd2VicGFnZVxuICovXG5maWxsUmVzdGF1cmFudEhUTUwgPSAocmVzdGF1cmFudCA9IHNlbGYucmVzdGF1cmFudCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1uYW1lJyk7XG4gICAgbmFtZS5pbm5lckhUTUwgPSByZXN0YXVyYW50Lm5hbWU7XG5cbiAgICBjb25zdCBhZGRyZXNzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtYWRkcmVzcycpO1xuICAgIGFkZHJlc3MuaW5uZXJIVE1MID0gcmVzdGF1cmFudC5hZGRyZXNzO1xuXG4gICAgY29uc3QgcGljdHVyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LXBob3RvJyk7XG5cbiAgICAvKiBTb3VyY2VzIFdlYlAgSW1hZ2VzICovXG4gICAgY29uc3QgV2VicF9vcmlnaW5hbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIik7XG4gICAgV2VicF9vcmlnaW5hbC50eXBlID0gXCJpbWFnZS93ZWJwXCI7XG4gICAgV2VicF9vcmlnaW5hbC5zcmNzZXQgPSBEQkhlbHBlci5pbWFnZVJlc3BGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQsICdvcmlnaW5hbCcsICd3ZWJwJyk7XG4gICAgV2VicF9vcmlnaW5hbC5tZWRpYSA9IGAobWluLXdpZHRoOiA2NjFweCkgYW5kIChtYXgtd2lkdGg6IDg2MHB4KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKG1pbi13aWR0aDogMTUwMSlgO1xuICAgIHBpY3R1cmUuYXBwZW5kKFdlYnBfb3JpZ2luYWwpO1xuXG4gICAgY29uc3QgV2VicF9sYXJnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIik7XG4gICAgV2VicF9sYXJnZS50eXBlID0gXCJpbWFnZS93ZWJwXCI7XG4gICAgV2VicF9sYXJnZS5zcmNzZXQgPSBEQkhlbHBlci5pbWFnZVJlc3BGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQsICdsYXJnZScsICd3ZWJwJyk7XG4gICAgV2VicF9sYXJnZS5tZWRpYSA9IGAobWluLXdpZHRoOiA0NjFweCkgYW5kIChtYXgtd2lkdGg6IDY2MHB4KSwgXG4gICAgICAgICAgICAgICAgICAgICAgKG1pbi13aWR0aDogMTA2MXB4KSBhbmQgKG1heC13aWR0aDogMTUwMHB4KWA7XG4gICAgcGljdHVyZS5hcHBlbmQoV2VicF9sYXJnZSk7XG5cbiAgICBjb25zdCBXZWJQX21lZGl1bSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIik7XG4gICAgV2ViUF9tZWRpdW0udHlwZSA9IFwiaW1hZ2Uvd2VicFwiO1xuICAgIFdlYlBfbWVkaXVtLnNyY3NldCA9IERCSGVscGVyLmltYWdlUmVzcEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCwgJ21lZGl1bScsICd3ZWJwJyk7XG4gICAgV2ViUF9tZWRpdW0ubWVkaWEgPSBgKG1pbi13aWR0aDogMzYxcHgpIGFuZCAobWF4LXdpZHRoOiA0NjBweCksXG4gICAgICAgICAgICAgICAgICAgICAgICAobWluLXdpZHRoOiA4NjFweCkgYW5kIChtYXgtd2lkdGg6IDEwNjBweClgO1xuICAgIHBpY3R1cmUuYXBwZW5kKFdlYlBfbWVkaXVtKTtcblxuICAgIGNvbnN0IFdlYlBfc21hbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIpO1xuICAgIFdlYlBfc21hbGwudHlwZSA9IFwiaW1hZ2Uvd2VicFwiO1xuICAgIFdlYlBfc21hbGwuc3Jjc2V0ID0gREJIZWxwZXIuaW1hZ2VSZXNwRm9yUmVzdGF1cmFudChyZXN0YXVyYW50LCAnc21hbGwnLCAnd2VicCcpO1xuICAgIFdlYlBfc21hbGwubWVkaWEgPSBgKG1heC13aWR0aDogMzYwcHgpYDtcbiAgICBwaWN0dXJlLmFwcGVuZChXZWJQX3NtYWxsKTtcblxuICAgIC8qIFNvdXJjZXMgSlBFRyBJbWFnZXMgKi9cbiAgICBjb25zdCBKcGdfb3JpZ2luYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIpO1xuICAgIEpwZ19vcmlnaW5hbC50eXBlID0gXCJpbWFnZS9qcGVnXCI7XG4gICAgSnBnX29yaWdpbmFsLnNyY3NldCA9IERCSGVscGVyLmltYWdlUmVzcEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCwgJ29yaWdpbmFsJyk7XG4gICAgSnBnX29yaWdpbmFsLm1lZGlhID0gYChtaW4td2lkdGg6IDY2MXB4KSBhbmQgKG1heC13aWR0aDogODYwcHgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgKG1pbi13aWR0aDogMTUwMSlgO1xuICAgIHBpY3R1cmUuYXBwZW5kKEpwZ19vcmlnaW5hbCk7XG5cbiAgICBjb25zdCBKcGdfbGFyZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIpO1xuICAgIEpwZ19sYXJnZS50eXBlID0gXCJpbWFnZS9qcGVnXCI7XG4gICAgSnBnX2xhcmdlLnNyY3NldCA9IERCSGVscGVyLmltYWdlUmVzcEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCwgJ2xhcmdlJyk7XG4gICAgSnBnX2xhcmdlLm1lZGlhID0gYChtaW4td2lkdGg6IDQ2MXB4KSBhbmQgKG1heC13aWR0aDogNjYwcHgpLCBcbiAgICAgICAgICAgICAgICAgICAgICAobWluLXdpZHRoOiAxMDYxcHgpIGFuZCAobWF4LXdpZHRoOiAxNTAwcHgpYDtcbiAgICBwaWN0dXJlLmFwcGVuZChKcGdfbGFyZ2UpO1xuXG4gICAgY29uc3QgSnBnX21lZGl1bSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIik7XG4gICAgSnBnX21lZGl1bS50eXBlID0gXCJpbWFnZS9qcGVnXCI7XG4gICAgSnBnX21lZGl1bS5zcmNzZXQgPSBEQkhlbHBlci5pbWFnZVJlc3BGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQsICdtZWRpdW0nKTtcbiAgICBKcGdfbWVkaXVtLm1lZGlhID0gYChtaW4td2lkdGg6IDM2MXB4KSBhbmQgKG1heC13aWR0aDogNDYwcHgpLFxuICAgICAgICAgICAgICAgICAgICAgIChtaW4td2lkdGg6IDg2MXB4KSBhbmQgKG1heC13aWR0aDogMTA2MHB4KWA7XG4gICAgcGljdHVyZS5hcHBlbmQoSnBnX21lZGl1bSk7XG5cbiAgICBjb25zdCBpbWFnZV9zbWFsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgaW1hZ2Vfc21hbGwudHlwZSA9IFwiaW1hZ2UvanBlZ1wiO1xuICAgIGltYWdlX3NtYWxsLnNyY3NldCA9IERCSGVscGVyLmltYWdlUmVzcEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCwgJ3NtYWxsJyk7XG4gICAgaW1hZ2Vfc21hbGwubWVkaWEgPSBgKG1heC13aWR0aDogMzYwcHgpYDtcbiAgICBpbWFnZV9zbWFsbC5hbHQgPSBgJHtyZXN0YXVyYW50Lm5hbWV9IC0gJHtyZXN0YXVyYW50LnBob3RvX2Rlc2NyaXB0aW9ufWA7XG4gICAgcGljdHVyZS5hcHBlbmQoaW1hZ2Vfc21hbGwpO1xuXG4gICAgY29uc3QgY3Vpc2luZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LWN1aXNpbmUnKTtcbiAgICBjdWlzaW5lLmlubmVySFRNTCA9IHJlc3RhdXJhbnQuY3Vpc2luZV90eXBlO1xuXG4gICAgLy8gZmlsbCBvcGVyYXRpbmcgaG91cnNcbiAgICBpZiAocmVzdGF1cmFudC5vcGVyYXRpbmdfaG91cnMpIHtcbiAgICAgICAgZmlsbFJlc3RhdXJhbnRIb3Vyc0hUTUwoKTtcbiAgICB9XG4gICAgLy8gZmlsbCByZXZpZXdzXG4gICAgZmlsbFJldmlld3NIVE1MKCk7XG59XG5cbi8qKlxuICogQ3JlYXRlIHJlc3RhdXJhbnQgb3BlcmF0aW5nIGhvdXJzIEhUTUwgdGFibGUgYW5kIGFkZCBpdCB0byB0aGUgd2VicGFnZS5cbiAqL1xuZmlsbFJlc3RhdXJhbnRIb3Vyc0hUTUwgPSAob3BlcmF0aW5nSG91cnMgPSBzZWxmLnJlc3RhdXJhbnQub3BlcmF0aW5nX2hvdXJzKSA9PiB7XG4gICAgY29uc3QgaG91cnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1ob3VycycpO1xuICAgIGZvciAobGV0IGtleSBpbiBvcGVyYXRpbmdIb3Vycykge1xuICAgICAgICBjb25zdCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xuXG4gICAgICAgIGNvbnN0IGRheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgICAgIGRheS5pbm5lckhUTUwgPSBrZXk7XG4gICAgICAgIGRheS5jbGFzc05hbWUgPSAnZGF5JztcbiAgICAgICAgcm93LmFwcGVuZENoaWxkKGRheSk7XG5cbiAgICAgICAgY29uc3QgdGltZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgICAgIHRpbWUuaW5uZXJIVE1MID0gb3BlcmF0aW5nSG91cnNba2V5XTtcbiAgICAgICAgdGltZS5jbGFzc05hbWUgPSAndGltZSc7XG4gICAgICAgIHJvdy5hcHBlbmRDaGlsZCh0aW1lKTtcblxuICAgICAgICBob3Vycy5hcHBlbmRDaGlsZChyb3cpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYWxsIHJldmlld3MgSFRNTCBhbmQgYWRkIHRoZW0gdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmZpbGxSZXZpZXdzSFRNTCA9IChyZXZpZXdzID0gc2VsZi5yZXN0YXVyYW50LnJldmlld3MpID0+IHtcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV2aWV3cy1jb250YWluZXInKTtcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gICAgdGl0bGUuaW5uZXJIVE1MID0gJ1Jldmlld3MnO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cbiAgICBpZiAoIXJldmlld3MpIHtcbiAgICAgICAgY29uc3Qgbm9SZXZpZXdzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICBub1Jldmlld3MuaW5uZXJIVE1MID0gJ05vIHJldmlld3MgeWV0ISc7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChub1Jldmlld3MpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3MtbGlzdCcpO1xuICAgIHJldmlld3MuZm9yRWFjaChyZXZpZXcgPT4ge1xuICAgICAgICB1bC5hcHBlbmRDaGlsZChjcmVhdGVSZXZpZXdIVE1MKHJldmlldykpO1xuICAgIH0pO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh1bCk7XG59XG5cbi8qKlxuICogQ3JlYXRlIHJldmlldyBIVE1MIGFuZCBhZGQgaXQgdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmNyZWF0ZVJldmlld0hUTUwgPSAocmV2aWV3KSA9PiB7XG4gICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGxpLmNsYXNzTmFtZSA9ICdyZXZpZXdfX2NhcmQnO1xuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGhlYWRlci5jbGFzc05hbWUgPSAncmV2aWV3X19oZWFkZXInO1xuXG4gICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XG4gICAgbmFtZS5pbm5lckhUTUwgPSByZXZpZXcubmFtZTtcbiAgICBuYW1lLmNsYXNzTmFtZSA9ICdyZXZpZXdfX25hbWUnO1xuICAgIGhlYWRlci5hcHBlbmRDaGlsZChuYW1lKTtcblxuICAgIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgZGF0ZS5pbm5lckhUTUwgPSByZXZpZXcuZGF0ZTtcbiAgICBkYXRlLmNsYXNzTmFtZSA9ICdyZXZpZXdfX2RhdGUnO1xuICAgIGhlYWRlci5hcHBlbmRDaGlsZChkYXRlKTtcblxuICAgIGxpLmFwcGVuZENoaWxkKGhlYWRlcik7XG5cbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYm9keS5jbGFzc05hbWUgPSAncmV2aWV3X19ib2R5JztcblxuICAgIGNvbnN0IHJhdGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICByYXRpbmcuaW5uZXJIVE1MID0gYFJhdGluZzogJHtyZXZpZXcucmF0aW5nfWA7XG4gICAgcmF0aW5nLmNsYXNzTmFtZSA9ICdyZXZpZXdfX3JhdGluZyc7XG4gICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKTtcbiAgICBpY29uLmNsYXNzTmFtZSA9ICdmYXMgZmEtc3Rhcic7XG4gICAgcmF0aW5nLmFwcGVuZENoaWxkKGljb24pO1xuICAgIGJvZHkuYXBwZW5kQ2hpbGQocmF0aW5nKTtcblxuICAgIGNvbnN0IGNvbW1lbnRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNvbW1lbnRzLmlubmVySFRNTCA9IHJldmlldy5jb21tZW50cztcbiAgICBjb21tZW50cy5jbGFzc05hbWUgPSAncmV2aWV3X19jb21tZW50cyc7XG4gICAgYm9keS5hcHBlbmRDaGlsZChjb21tZW50cyk7XG5cbiAgICBsaS5hcHBlbmRDaGlsZChib2R5KTtcblxuICAgIHJldHVybiBsaTtcbn1cblxuLyoqXG4gKiBBZGQgcmVzdGF1cmFudCBuYW1lIHRvIHRoZSBicmVhZGNydW1iIG5hdmlnYXRpb24gbWVudVxuICovXG5maWxsQnJlYWRjcnVtYiA9IChyZXN0YXVyYW50ID0gc2VsZi5yZXN0YXVyYW50KSA9PiB7XG4gICAgY29uc3QgYnJlYWRjcnVtYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdicmVhZGNydW1iJyk7XG4gICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGxpLmlubmVySFRNTCA9IHJlc3RhdXJhbnQubmFtZTtcbiAgICBicmVhZGNydW1iLmFwcGVuZENoaWxkKGxpKTtcbn1cblxuLyoqXG4gKiBHZXQgYSBwYXJhbWV0ZXIgYnkgbmFtZSBmcm9tIHBhZ2UgVVJMLlxuICovXG5nZXRQYXJhbWV0ZXJCeU5hbWUgPSAobmFtZSwgdXJsKSA9PiB7XG4gICAgaWYgKCF1cmwpXG4gICAgICAgIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csICdcXFxcJCYnKTtcbiAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoYFs/Jl0ke25hbWV9KD0oW14mI10qKXwmfCN8JClgKSxcbiAgICAgICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcbiAgICBpZiAoIXJlc3VsdHMpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGlmICghcmVzdWx0c1syXSlcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1syXS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG59Il19
