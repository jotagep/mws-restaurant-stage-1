const staticCache="rest-reviews-1.1.0",ImagesCache="mws-images",allCaches=[staticCache,ImagesCache],urlsToCache=["/","/index.html","/restaurant.html","/css/styles.css","/js/restaurant_info.js","/js/main.js","/js/dbhelper.js","/js/vendor/idb.js","/manifest.json","/assets/icon/favicon.png"];function serveImg(e){const t=e.url.replace(/-.*\.(jpg|webp)/,"");return caches.open(ImagesCache).then(function(n){return n.match(t).then(function(s){return s?(console.log(`${t} ðŸ’»`),s):fetch(e).then(function(e){return 200==e.status&&n.put(t,e.clone()),console.log(`${t} ðŸŒŽ`),e})})})}self.addEventListener("install",function(e){console.log("== INSTALLING =="),e.waitUntil(caches.open(staticCache).then(function(e){return console.log("-- SW Installed --"),e.addAll(urlsToCache).then(()=>{console.log(" -*- URLs added to Cache -*-")})}).catch(function(e){console.log("Error adding all to cache, ",e)}))}),self.addEventListener("fetch",e=>{const t=new URL(e.request.url);t.origin===location.origin&&t.pathname.startsWith("/assets/img")?e.respondWith(serveImg(e.request)):e.respondWith(caches.match(e.request).then(t=>t||fetch(e.request)).catch(e=>console.log("Match error, ",e)))}),self.addEventListener("activate",function(e){console.log("New Service Worker activating");const t=[staticCache];e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return e.startsWith("rest-reviews-")&&e!=staticCache}).map(function(e){if(-1===t.indexOf(e))return caches.delete(e)}))}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3LmpzIl0sIm5hbWVzIjpbInN0YXRpY0NhY2hlIiwiSW1hZ2VzQ2FjaGUiLCJhbGxDYWNoZXMiLCJ1cmxzVG9DYWNoZSIsInNlcnZlSW1nIiwicmVxdWVzdCIsInN0b3JhZ2VVcmwiLCJ1cmwiLCJyZXBsYWNlIiwiY2FjaGVzIiwib3BlbiIsInRoZW4iLCJjYWNoZSIsIm1hdGNoIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwiZmV0Y2giLCJuZXR3b3JrUmVzcG9uc2UiLCJzdGF0dXMiLCJwdXQiLCJjbG9uZSIsInNlbGYiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ3YWl0VW50aWwiLCJhZGRBbGwiLCJjYXRjaCIsImVycm9yIiwicmVxdWVzdFVSTCIsIlVSTCIsIm9yaWdpbiIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwicmVzcG9uZFdpdGgiLCJjYWNoZVdoaXRlbGlzdCIsImtleXMiLCJjYWNoZU5hbWVzIiwiUHJvbWlzZSIsImFsbCIsImZpbHRlciIsImNhY2hlTmFtZSIsIm1hcCIsImluZGV4T2YiLCJkZWxldGUiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFlBQWMscUJBQ2RDLFlBQWMsYUFDZEMsV0FDSkYsWUFDQUMsYUFFSUUsYUFDSixJQUNBLGNBQ0EsbUJBQ0Esa0JBQ0EseUJBQ0EsY0FDQSxrQkFDQSxvQkFDQSxpQkFDQSw0QkFzQ0YsU0FBU0MsU0FBU0MsR0FDaEIsTUFBTUMsRUFBYUQsRUFBUUUsSUFBSUMsUUFBUSxrQkFBbUIsSUFFMUQsT0FBT0MsT0FBT0MsS0FBS1QsYUFBYVUsS0FBSyxTQUFVQyxHQUM3QyxPQUFPQSxFQUFNQyxNQUFNUCxHQUFZSyxLQUFLLFNBQVVHLEdBQzVDLE9BQUlBLEdBQ0ZDLFFBQVFDLE9BQU9WLFFBQ1JRLEdBR0ZHLE1BQU1aLEdBQVNNLEtBQUssU0FBVU8sR0FLbkMsT0FKOEIsS0FBMUJBLEVBQWdCQyxRQUNsQlAsRUFBTVEsSUFBSWQsRUFBWVksRUFBZ0JHLFNBRXhDTixRQUFRQyxPQUFPVixRQUNSWSxRQWxEZkksS0FBS0MsaUJBQWlCLFVBQVcsU0FBVUMsR0FFekNULFFBQVFDLElBQUksb0JBQ1pRLEVBQU1DLFVBQ0poQixPQUFPQyxLQUFLVixhQUNYVyxLQUFLLFNBQVVDLEdBRWQsT0FEQUcsUUFBUUMsSUFBSSxzQkFDTEosRUFBTWMsT0FBT3ZCLGFBQ2pCUSxLQUFLLEtBQ0pJLFFBQVFDLElBQUksb0NBR2pCVyxNQUFNLFNBQVVDLEdBQ2ZiLFFBQVFDLElBQUksOEJBQStCWSxRQUtqRE4sS0FBS0MsaUJBQWlCLFFBQVVDLElBRTlCLE1BQU1LLEVBQWEsSUFBSUMsSUFBSU4sRUFBTW5CLFFBQVFFLEtBRXJDc0IsRUFBV0UsU0FBV0MsU0FBU0QsUUFDN0JGLEVBQVdJLFNBQVNDLFdBQVcsZUFDakNWLEVBQU1XLFlBQVkvQixTQUFTb0IsRUFBTW5CLFVBSXJDbUIsRUFBTVcsWUFBWTFCLE9BQU9JLE1BQU1XLEVBQU1uQixTQUNsQ00sS0FBTUcsR0FBYUEsR0FBWUcsTUFBTU8sRUFBTW5CLFVBQzNDc0IsTUFBTUMsR0FBU2IsUUFBUUMsSUFBSSxnQkFBaUJZLE9BNEJqRE4sS0FBS0MsaUJBQWlCLFdBQVksU0FBVUMsR0FDMUNULFFBQVFDLElBQUksaUNBQ1osTUFBTW9CLEdBQWtCcEMsYUFFeEJ3QixFQUFNQyxVQUNKaEIsT0FBTzRCLE9BQU8xQixLQUFLLFNBQVUyQixHQUMzQixPQUFPQyxRQUFRQyxJQUNiRixFQUNDRyxPQUFPLFNBQVVDLEdBQ2hCLE9BQ0VBLEVBQVVSLFdBQVcsa0JBQW9CUSxHQUFhMUMsY0FHekQyQyxJQUFJLFNBQVUvQixHQUNiLElBQXVDLElBQW5Dd0IsRUFBZVEsUUFBUWhDLEdBQ3pCLE9BQU9ILE9BQU9vQyxPQUFPakMiLCJmaWxlIjoic3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzdGF0aWNDYWNoZSA9IFwicmVzdC1yZXZpZXdzLTEuMS4wXCI7XG5jb25zdCBJbWFnZXNDYWNoZSA9IFwibXdzLWltYWdlc1wiO1xuY29uc3QgYWxsQ2FjaGVzID0gW1xuICBzdGF0aWNDYWNoZSxcbiAgSW1hZ2VzQ2FjaGVcbl1cbmNvbnN0IHVybHNUb0NhY2hlID0gW1xuICBcIi9cIixcbiAgXCIvaW5kZXguaHRtbFwiLFxuICBcIi9yZXN0YXVyYW50Lmh0bWxcIixcbiAgXCIvY3NzL3N0eWxlcy5jc3NcIixcbiAgXCIvanMvcmVzdGF1cmFudF9pbmZvLmpzXCIsXG4gIFwiL2pzL21haW4uanNcIixcbiAgXCIvanMvZGJoZWxwZXIuanNcIixcbiAgXCIvanMvdmVuZG9yL2lkYi5qc1wiLFxuICBcIi9tYW5pZmVzdC5qc29uXCIsXG4gIFwiL2Fzc2V0cy9pY29uL2Zhdmljb24ucG5nXCJcbl07XG5cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignaW5zdGFsbCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAvLyBjYWNoZSByZXNwb25zZXMgdG8gcmVxdWVzdHMgZm9yIHNpdGUgYXNzZXRzXG4gIGNvbnNvbGUubG9nKCc9PSBJTlNUQUxMSU5HID09Jyk7XG4gIGV2ZW50LndhaXRVbnRpbChcbiAgICBjYWNoZXMub3BlbihzdGF0aWNDYWNoZSlcbiAgICAudGhlbihmdW5jdGlvbiAoY2FjaGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCctLSBTVyBJbnN0YWxsZWQgLS0nKTtcbiAgICAgIHJldHVybiBjYWNoZS5hZGRBbGwodXJsc1RvQ2FjaGUpXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnIC0qLSBVUkxzIGFkZGVkIHRvIENhY2hlIC0qLScpO1xuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgYWRkaW5nIGFsbCB0byBjYWNoZSwgXCIsIGVycm9yKTtcbiAgICB9KVxuICApO1xufSk7XG5cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCAoZXZlbnQpID0+IHtcblxuICBjb25zdCByZXF1ZXN0VVJMID0gbmV3IFVSTChldmVudC5yZXF1ZXN0LnVybCk7XG5cbiAgaWYgKHJlcXVlc3RVUkwub3JpZ2luID09PSBsb2NhdGlvbi5vcmlnaW4pIHtcbiAgICBpZiAocmVxdWVzdFVSTC5wYXRobmFtZS5zdGFydHNXaXRoKCcvYXNzZXRzL2ltZycpKSB7XG4gICAgICBldmVudC5yZXNwb25kV2l0aChzZXJ2ZUltZyhldmVudC5yZXF1ZXN0KSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIGV2ZW50LnJlc3BvbmRXaXRoKGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UgfHwgZmV0Y2goZXZlbnQucmVxdWVzdCkpXG4gICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKCdNYXRjaCBlcnJvciwgJywgZXJyb3IpKVxuICApO1xufSk7XG5cblxuZnVuY3Rpb24gc2VydmVJbWcocmVxdWVzdCkge1xuICBjb25zdCBzdG9yYWdlVXJsID0gcmVxdWVzdC51cmwucmVwbGFjZSgvLS4qXFwuKGpwZ3x3ZWJwKS8sICcnKTtcblxuICByZXR1cm4gY2FjaGVzLm9wZW4oSW1hZ2VzQ2FjaGUpLnRoZW4oZnVuY3Rpb24gKGNhY2hlKSB7XG4gICAgcmV0dXJuIGNhY2hlLm1hdGNoKHN0b3JhZ2VVcmwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgY29uc29sZS5sb2coYCR7c3RvcmFnZVVybH0g8J+Su2ApO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gZmV0Y2gocmVxdWVzdCkudGhlbihmdW5jdGlvbiAobmV0d29ya1Jlc3BvbnNlKSB7XG4gICAgICAgIGlmIChuZXR3b3JrUmVzcG9uc2Uuc3RhdHVzID09IDIwMCkge1xuICAgICAgICAgIGNhY2hlLnB1dChzdG9yYWdlVXJsLCBuZXR3b3JrUmVzcG9uc2UuY2xvbmUoKSk7XG4gICAgICAgIH0gIFxuICAgICAgICBjb25zb2xlLmxvZyhgJHtzdG9yYWdlVXJsfSDwn4yOYCk7XG4gICAgICAgIHJldHVybiBuZXR3b3JrUmVzcG9uc2U7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59XG5cblxuLy8gQ2hlY2sgbmV3ZXN0IGNhY2hlIGFuZCBkZWxldGUgb2xkIHZlcnNpb25cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcihcImFjdGl2YXRlXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICBjb25zb2xlLmxvZyhcIk5ldyBTZXJ2aWNlIFdvcmtlciBhY3RpdmF0aW5nXCIpO1xuICBjb25zdCBjYWNoZVdoaXRlbGlzdCA9IFtzdGF0aWNDYWNoZV07XG5cbiAgZXZlbnQud2FpdFVudGlsKFxuICAgIGNhY2hlcy5rZXlzKCkudGhlbihmdW5jdGlvbiAoY2FjaGVOYW1lcykge1xuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgICAgICBjYWNoZU5hbWVzXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGNhY2hlTmFtZSkge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBjYWNoZU5hbWUuc3RhcnRzV2l0aChcInJlc3QtcmV2aWV3cy1cIikgJiYgY2FjaGVOYW1lICE9IHN0YXRpY0NhY2hlXG4gICAgICAgICAgKTtcbiAgICAgICAgfSlcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoY2FjaGUpIHtcbiAgICAgICAgICBpZiAoY2FjaGVXaGl0ZWxpc3QuaW5kZXhPZihjYWNoZSkgPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVzLmRlbGV0ZShjYWNoZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9KVxuICApO1xufSk7Il19
